version: "3.8"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: vehicles
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d vehicles"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    volumes:
      - redisdata:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf http://127.0.0.1:9200/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    depends_on:
      - elasticsearch
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    command: server /data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - miniodata:/data
    ports:
      - "9000:9000"
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf http://127.0.0.1:9000/minio/health/live || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    image: voiture-backend:latest
    environment:
      DATABASE_URL: "postgresql+psycopg2://app:changeme@postgres:5432/vehicles"
      ELASTIC_HOST: "http://elasticsearch:9200"
      REDIS_URL: "redis://redis:6379/0"
      JWT_SECRET: "changeme_dev_secret_change_this"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ../backend:/app  # si tu veux monter le code pour dev (optionnel)

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    image: voiture-frontend:latest
    environment:
      - VITE_API_BASE=http://backend:8000/api
    ports:
      - "127.0.0.1:5173:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  miniodata:
  esdata:
